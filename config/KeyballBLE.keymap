#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        scroll {
            bindings = <&sl 5>;
            key-positions = <18 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R               &kp T                                                            &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F               &kp G        &mkp LCLK                      &kp BACKSLASH        &kp H        &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X         &kp C         &kp V               &kp B        &mkp RCLK                      &kp LEFT_WIN         &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LG(L)  &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT TAB  &lt 1 SPACE  &lt_to_layer_0 5 CAPSLOCK      &mt RCTRL BACKSPACE  &lt 2 ENTER                             &kp INT_MUHENKAN
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&kp F1           &kp F2        &kp F3            &kp F4             &kp NUBS                            &kp F5          &kp F7    &kp F8        &kp F9    &kp F10
&kp EXCLAMATION  &kp QUESTION  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COLON      &trans      &kp F13  &kp UNDERSCORE  &mkp MB1  &kp LS(HOME)  &mkp MB2  &kp F11
&kp TILDE        &kp GRAVE     &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp SEMICOLON  &trans      &kp F14  &kp AT_SIGN     &kp HOME  &kp LS(END)   &kp END   &kp F12
&kp PIPE         &kp CARET     &trans            &trans             &trans         &trans      &trans   &trans                                            &trans
            >;
        };

        DEFAULT_KEYS {
            bindings = <
&kp ASTERISK     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                                       &kp LC(LS(TAB))  &trans          &mkp MB3        &kp LA(F4)       &kp LEFT_WIN
&kp SLASH        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS   &kp LC(LA(KP_NUMBER_0))      &trans  &kp LC(TAB)      &mkp MB1        &kp UP_ARROW    &mkp MB2         &kp LEFT_SHIFT
&kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL  &kp INT_YEN                  &trans  &kp LG(LS(D))    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LCTRL
&trans           &trans           &kp PERIOD       &trans           &trans     &trans                       &trans  &trans                                                            &trans
            >;
        };

        CUSTOM {
            bindings = <
&kp ESCAPE     &trans             &trans            &kp LA(LEFT_ARROW)      &kp LA(RIGHT_ARROW)                          &kp LG(LS(S))    &trans              &trans              &kp LC(ENTER)        &kp DELETE
&kp LC(MINUS)  &kp LC(PLUS)       &kp LG(LC(C))     &kp LG(LC(LEFT_ARROW))  &kp LG(LC(RIGHT_ARROW))  &trans      &trans  &kp PRINTSCREEN  &trans              &kp LG(UP_ARROW)    &trans               &kp LA(TAB)
&kp LC(MINUS)  &kp LC(SEMICOLON)  &kp LC(NUMBER_1)  &kp LG(LS(V))           &kp LG(LS(RIGHT_ARROW))  &trans      &trans  &kp LG(LS(D))    &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &trans
&trans         &trans             &kp LC(NUMBER_2)  &trans                  &trans                   &trans      &trans  &trans                                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans     &trans     &trans     &trans                           &trans    &trans     &mkp MCLK  &trans     &trans
&mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &mkp LCLK      &trans  &mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5
&trans    &trans     &trans     &trans     &trans    &mkp RCLK      &trans  &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans    &trans         &trans  &trans                                     &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE     &trans             &trans            &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)                          &kp LG(LS(S))    &trans              &trans              &kp LC(ENTER)        &kp DEL
&kp LC(MINUS)  &kp LC(PLUS)       &kp LG(LC(C))     &mkp MB4            &mkp MB5                 &trans      &trans  &kp PRINTSCREEN  &mkp MB1            &kp LG(UP_ARROW)    &mkp MB2             &kp LA(TAB)
&kp LC(MINUS)  &kp LC(SEMICOLON)  &kp LC(NUMBER_1)  &kp LG(LS(V))       &kp LG(LS(RIGHT_ARROW))  &trans      &trans  &trans           &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &kp C_AL_KEYBOARD_LAYOUT
&trans         &trans             &kp LC(NUMBER_2)  &trans              &trans                   &trans      &trans  &trans                                                                        &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans     &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
